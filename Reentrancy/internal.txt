INFO:Detectors: (Red)
Reentrancy in InternalReentrancy.withdraw(uint256) (Internal_Reentrancy.sol#10-16):
        External calls:
        - (success) = msg.sender.call{value: _amount}() (Internal_Reentrancy.sol#13)
        State variables written after the call(s):
        - balances[msg.sender] -= _amount (Internal_Reentrancy.sol#15)
        InternalReentrancy.balances (Internal_Reentrancy.sol#4) can be used in cross function reentrancies:
        - InternalReentrancy.deposit() (Internal_Reentrancy.sol#6-8)
        - InternalReentrancy.withdraw(uint256) (Internal_Reentrancy.sol#10-16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities


INFO:Detectors: (Green)
Pragma version^0.8.0 (Internal_Reentrancy.sol#1) allows old versions
solc-0.8.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity


INFO:Detectors: (Green)
Low level call in InternalReentrancy.withdraw(uint256) (Internal_Reentrancy.sol#10-16):
        - (success) = msg.sender.call{value: _amount}() (Internal_Reentrancy.sol#13)
Low level call in InternalReentrancy.attack() (Internal_Reentrancy.sol#18-24):
        - (success) = address(this).call{value: msg.value}(abi.encodeWithSignature(withdraw(uint256),msg.value)) (Internal_Reentrancy.sol#20-22)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls


INFO:Detectors: (Green)
Parameter InternalReentrancy.withdraw(uint256)._amount (Internal_Reentrancy.sol#10) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Slither:Internal_Reentrancy.sol analyzed (1 contracts with 88 detectors), 6 result(s) found